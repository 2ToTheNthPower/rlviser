name: Release

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name for release'
        required: false
        default: 'manual-release'

jobs:
  build-release:
    name: Build Release - ${{ matrix.platform.os }} (${{ matrix.platform.target }})
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
            bin: rlviser
            archive: tar.gz
            
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            bin: rlviser.exe
            archive: zip
            
          - os: macos-latest
            target: x86_64-apple-darwin
            bin: rlviser
            archive: tar.gz
            
          - os: macos-latest
            target: aarch64-apple-darwin
            bin: rlviser
            archive: tar.gz

    runs-on: ${{ matrix.platform.os }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform.target }}
          
      - name: Install Linux dependencies
        if: contains(matrix.platform.os, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install -y g++ pkg-config libx11-dev libasound2-dev libudev-dev libwayland-dev libxkbcommon-dev
          
      - name: Cache cargo & target directories
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.platform.target }}
          
      - name: Build release binary
        run: cargo build --release --target ${{ matrix.platform.target }} --no-default-features --features threaded
        
      - name: Package (tar.gz)
        if: matrix.archive == 'tar.gz'
        run: |
          cd target/${{ matrix.platform.target }}/release
          tar czf ../../../rlviser-${{ matrix.platform.target }}.tar.gz ${{ matrix.platform.bin }}
          cd -
          
      - name: Package (zip)
        if: matrix.archive == 'zip'
        shell: pwsh
        run: |
          cd target/${{ matrix.platform.target }}/release
          Compress-Archive -Path ${{ matrix.platform.bin }} -DestinationPath ../../../rlviser-${{ matrix.platform.target }}.zip
          cd -
          
      - name: Upload release artifact
        uses: actions/upload-artifact@v4
        with:
          name: rlviser-${{ matrix.platform.target }}
          path: |
            rlviser-${{ matrix.platform.target }}.${{ matrix.archive }}

  publish-release:
    name: Publish Release
    needs: [build-release]
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/
          
      - name: Display artifacts
        run: ls -laR artifacts/
        
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.tag_name || github.ref_name }}
          name: Release ${{ github.event.inputs.tag_name || github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            artifacts/**/*.tar.gz
            artifacts/**/*.zip
          body: |
            ## RLViser Release
            
            ### Installation
            
            Download the appropriate binary for your platform:
            - **Linux (x86_64)**: `rlviser-x86_64-unknown-linux-gnu.tar.gz`
            - **Windows (x86_64)**: `rlviser-x86_64-pc-windows-msvc.zip`
            - **macOS (Intel)**: `rlviser-x86_64-apple-darwin.tar.gz`
            - **macOS (Apple Silicon)**: `rlviser-aarch64-apple-darwin.tar.gz`
            
            Extract and run the `rlviser` executable.
            
            ### Notes
            Extra keybinds for RLViser are included in the README