name: Build and Publish Wheels

on:
  push:
    tags:
      - "v*.*.*"
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-wheels:
    name: Build wheel for ${{ matrix.platform.name }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - name: Linux x86_64
            os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
            
          - name: Windows x86_64
            os: windows-latest
            target: x86_64-pc-windows-msvc
            
          - name: macOS x86_64
            os: macos-latest
            target: x86_64-apple-darwin
            
          - name: macOS ARM64
            os: macos-latest
            target: aarch64-apple-darwin

    runs-on: ${{ matrix.platform.os }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform.target }}
          
      - name: Install Linux dependencies
        if: contains(matrix.platform.os, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install -y g++ pkg-config libx11-dev libasound2-dev libudev-dev libwayland-dev libxkbcommon-dev
          
      - name: Install Python build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel setuptools-rust build
          
      - name: Set Rust target for build
        run: |
          echo "CARGO_BUILD_TARGET=${{ matrix.platform.target }}" >> $GITHUB_ENV
        shell: bash
          
      - name: Build wheel
        run: python -m build --wheel
        
      - name: Upload wheel artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheel-${{ matrix.platform.target }}
          path: dist/*.whl

  build-sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build
          
      - name: Build source distribution
        run: python -m build --sdist
        
      - name: Upload sdist artifact
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz

  publish-to-pypi:
    name: Publish Python üêç distribution üì¶ to PyPI
    needs: [build-wheels, build-sdist]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes
    environment:
      name: pypi
      url: https://pypi.org/p/pyviser
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist/
          
      - name: Organize distributions
        run: |
          mkdir -p final_dist
          find dist -name "*.whl" -exec mv {} final_dist/ \;
          find dist -name "*.tar.gz" -exec mv {} final_dist/ \;
          ls -la final_dist/
          
      - name: Publish distribution üì¶ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: final_dist/
